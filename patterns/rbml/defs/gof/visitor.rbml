//  Pattern
pattern "Visitor", {
  sps {
    roles {
      gen_hierarchy "Visitor", {
        classifier_role "Visitor", mult: "*", root: true, {
          behavioral_role "VisitElem(elem:Element)", mult: "1..*", props: ["abstract"]
        }
        classifier_role "AbstractVisitor", mult: "*"
        class_role "ConcreteVisitor", mult: "1..*", {
          behavioral_role "VisitElem(elem:Element)", mult: "1..*"
        }
      }

      gen_hierarchy "Element", {
        classifier_role "Element", mult: "*", {
          behavioral_role "Accept(Vis:Visitor)", mult: "1..*", props: ["abstract"]
          behavioral_role "Operation()", mult: "1..*", props: ["abstract"]
        }
        classifier_role "AbstractElement", mult: "*"
        class_role "ConcreteElement", mult: "1..*", {
          behavioral_role "Accept(Vis:Visitor)", mult: "1..*"
          behavioral_role "Operation()", mult: "1..*"
        }
      }

      class_role "ObjectStructure", mult: "1..*"
    }

    relations {
      association_role "Visits", {
        source "Visit", role: "Visitor", mult: "1..1"
        dest "Ele", role: "Element", mult: "1..*"
      }
      association_role "ObjStructElem", {
        source "Obj", role: "ObjectStructure", mult: "1..1"
        dest "Elem", role: "Element", mult: "1..1"
      }

      at_least_one {
        generalization_role "ElementGeneralization", child: "Element", parent: "Element"
        realization_role "ElementRealization", child: "Element", parent: "Element"
      }

      at_least_one {
        generalization_role "VisitorGeneralization", child: "Visitor", parent: "Visitor"
        realization_role "VisitorRealization", child: "Visitor", parent: "Visitor"
      }
    }

    constraints {
    }
  }

  ips {
    roles {
    }

    trace {
    }
  }
}
