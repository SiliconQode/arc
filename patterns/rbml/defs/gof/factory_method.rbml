//  Pattern
pattern "Factory Method", {
  sps {
    roles {
      gen_hierarchy "Product", {
        classifier_role "Product", mult: "*"
        classifier_role "AbstractProduct", mult: "*"
        class_role "ConcreteProduct", mult: "1..*"
      }

      gen_hierarchy "Creator", {
        classifier_role "Creator", mult: "*", root: true, {
          behavioral_feature "FactoryMethod():Product", mult: "1..*"
        }
        classifier_role "AbstractCreator", mult: "*"
        class_role "ConcreteCreator", mult: "1..*", {
          behavioral_feature "FactoryMethod():Product", mult: "1..*"
        }
      }
    }

    relations {
      create_role "ProductCreation", source: "ConcreteCreator", dest: "ConcreteProduct"
      at_least_one {
        generalization_role "ProductGeneralization", child: "Product", parent: "Product"
        realization_role "ProductRealization", child: "Product", parent: "Product"
      }
      at_least_one {
        generalization_role "CreatorGeneralization", child: "Creator", parent: "Creator"
        realization_role "CreatorRealization", child: "Creator", parent: "Creator"
      }
    }

    constraints {
    }
  }

  ips {
    roles {
    }

    trace {
    }
  }
}
