//  Pattern
pattern "Iterator", {
  sps {
    roles {
      gen_hierarchy "Aggregate", {
        classifier_role "Aggregate", mult: "*", root: true, {
          behavioral_feature "CreateIterator():Iterator", mult: "1..*", properties: ["abstract"]
        }
        classifier_role "AbstractAggregate", mult: "*"
        class_role "ConcreteAggregate", mult: "1..*", {
          behavioral_feature "CreateIterator():Iterator", mult: "1..*",
        }
      }

      gen_hierarchy "Iterator", {
        classifier_role "Iterator", mult: "*", root: true, {
          structural_feature "Index:Integer", mult: "1..1"
          behavioral_feature "First()", mult: "1..1", properties: ["abstract"]
          behavioral_feature "Next()", mult: "1..1", properties: ["abstract"]
          behavioral_feature "IsDone():Boolean", mult: "1..1", properties: ["abstract"]
          behavioral_feature "CurrentItem():Item", mult: "1..1", properties: ["abstract"]
        }
        classifier_role "AbstractIterator", mult: "*"
        class_role "ConcreteIterator", mult: "1..*", {
          behavioral_feature "First()", mult: "1..1"
          behavioral_feature "Next()", mult: "1..1"
          behavioral_feature "IsDone():Boolean", mult: "1..1"
          behavioral_feature "CurrentItem():Item", mult: "1..1"
        }
      }

      class_role "Item", mult: "*"
    }

    relations {
      association_role "AggrItem" {
        source "Agt", role: "Aggregate", mult: "1..1"
        dest "Itm", role: "Item", mult: "1..*"
      }
      association_role "AggrIter" {
        source "Aggr", role: "Aggregate", mult: "1..*"
        dest "Iter", role: "Iterator", mult: "1..1"
      }
      usage_role "AggrIterCreateDep", source: "ConcreteAggregate", source: "ConcreteIterator"
      at_least_one {
        generalization_role "AggregateGeneralization", child: "Aggregate", parent: "Aggregate"
        realization_role "AggregateRealization", child: "Aggregate", parent: "Aggregate"
      }
      at_least_one {
        generalization_role "IteratorGeneralization", child: "Iterator", parent: "Iterator"
        realization_role "IteratorRealization", child: "Iterator", parent: "Iterator"
      }
    }

    constraints {
    }
  }

  ips {
    roles {
    }

    trace {
    }
  }
}
