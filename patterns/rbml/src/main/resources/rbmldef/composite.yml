#
# The MIT License (MIT)
#
# Empirilytics RBML DSL
# Copyright (c) 2015-2021 Empirilytics
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

SPS:
  name: Composite
  roles:
    - GenHierarchy:
        name: Component
        Classifier:
          name: Component
          mult: 1..*
          features:
            b1:
              name: Operation()
              params: [ ]
              mult: 1..*
              abstract: "true"
            b2:
              name: Add()
              params: [ c: Component ]
              mult: 0..1
            b3:
              name: Remove()
              params: [ c: Component ]
              mult: 0..1
            b4:
              name: GetChild()
              type: Component
              params: [ index: Int ]
              mult: 0..1
        children:
          - Class:
              name: ConcreteComposite
              mult: 1..*
              features:
                b1:
                  name: Operation()
                  params: [ ]
                  mult: 1..*
                b2:
                  name: Add()
                  params: [ c: Component ]
                  mult: 0..1
                b3:
                  name: Remove()
                  params: [ c: Component ]
                  mult: 0..1
                b4:
                  name: GetChild()
                  type: Component
                  params: [ index: Int ]
                  mult: 0..1
          - Classifier:
              name: AbstractComposite
              mult: "*"
          - Class:
              name: Leaf
              mult: 1..*
              features:
                b1:
                  name: Operation()
                  params: [ ]
                  mult: 1..*
    - Class:
        name: Client
        mult: 0..1
  relations:
    - Association:
        name: ClntCmpt
        mult: 1..1
        source:
          name: clnt
          mult: 1..*
          type: Client
        dest:
          name: cmpt
          mult: 1..*
          type: Component@Component
    - Aggregation:
        name: ContainedChildren
        mult: 1..1
        source:
          name: parent
          type: Component@ConcreteComposite
          mult: 1..1
        dest:
          name: children
          type: Component@Component
          mult: "*"